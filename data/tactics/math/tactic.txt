### Tactic name
math

### Problem type and tactic
This tactic seeks to model the question as a math model and solves it with the help of python and math libs such as
sympy and numpy.

**Typical use cases**
This tactic is suitable for solving problems that involves calculation and math reasoning.

**Model and tactic outputs**
- Model: one builds a math model that represents the question

- Outputs: the output of the program should be either the numerical answer or whatever the problem-specific answer

### Tactic details
You will use the following python libs to solve the problem:
Any builtin Python libs such as math
numpy
sympy

**Action space**
You will use and ONLY use the following actions to solve the problem.
You can apply actions in arbitrary order and arbitrary number of times.
In case you think the problem is not solvable by this tactic use action "Tactic check" to exit.

#A# Plan
- Input: the problem given
- Functionality: give a plan on how to solve the question, including a sketch of the solution, libs to be used,
and code snippets
- Output: text description of the plan and potential code snippets of the form
    ```python
    <your code>
    ```

#A# Build math model
- Input: the original problem given
- Functionality: build the math model that represents the problem, which will produce the answer
- Output: a python program of the form
    ```python
    <your code>
    ```

#A# Revise code
- Input: all codes and observations so far
- Functionality: reflect on the Input; revise the code to continue the problem-solving process.
- Output: a revised python program of the form
    ```python
    <your code>
    ```

#A# Reason
- Input: all thoughts, actions, and observations so far
- Functionality: reason over the programs and the outputs, and derive the intermediate answers or rationales.
- Output: your reasoning process in text

#A# Aggregate and answer
- Input: all thoughts, actions, and observations so far
- Functionality: aggregate and summarize the outputs produced so far, and provide the problem-specific final answer
- Output: the problem-specific answer

#A# Tactic check
- Input: all thoughts, actions, and observations so far
- Functionality: analyze the Input, determine if the tactic can solve the problem or not
- Output: "Tactic Good" if tactic can solve the problem; "Tactic Bad" if tactic cannot solve the
  problem.